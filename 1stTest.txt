apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx-deploy
  name: nginx-deploy
spec:
  replicas: 4
  selector:
    matchLabels:
      app: nginx-deploy
  strategy:
     rollingUpdate:
         maxSurge: 1
         maxUnavailable: 2
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-deploy
    spec:
      containers:
      - image: nginx:1.16
        name: nginx
        resources: {}
status: {}


apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
    spec:
      volumes:
        - name: data
          emptyDir: {}
        - name: redis-config
          configMap:
             name: redis-config 
      containers:
      - image: redis:alpine
        name: redis
        ports:
        - containerPort: 6379
        volumeMounts:
           - name: data
             mountPath: /redis-master-data
           - name: redis-config
             mountPath: /redis-master
        resources: 
          requests:
             cpu: "0.2"
status: {}





apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: time-check
  name: time-check
  namespace: dvl1987
spec:
  volumes:
    - name: tst
      emptyDir: {}
  containers:
  - image: busybox
    name: time-check 
    Jai oublier env : $TIME_FREQ from cm
    command: ['sh','-c','while true; do date >> /opt/time/time-check.log ; sleep $TIME_FREQ;done']
    resources: {}
    volumeMounts:
       - name: tst
         mountPath: '/opt/time'
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}



