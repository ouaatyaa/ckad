apiVersion: v1                          *<< 1
kind: Pod                               *<< 2
metadata:                               *<< 3
  name: simple-webapp-color
  labels:
    name: simple-webapp-color
spec:                                   *<< 4
  containers:
    - name: simple-webapp-color
      image: simple-webapp-color
      ports:
        - containerPort: 8080
      resources:                     <<<< ressources  IN the containers spec :
        requests:
          memory: "1Gi"
          cpu: 1
        limits:
          memory: â€œ2Gi"                << the POD can bypass the mem limit but it die
          cpu: 2                       << the POD can not bypass the cpu limit


-------------------------------- !!!! ----------------------------------------

Note on default resource requirements and limits
In the previous lecture, I said - "When a pod is created 
the containers are assigned a default CPU request of .5 and memory of 256Mi". 
For the POD to pick up those defaults you must have first set those as default values for request 
and limit by creating a LimitRange in that namespace.
------------------------------------------------------------------
Create the LimitRange  ressource in that namespace.
--------------------------------------------------------
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
spec:
  limits:
  - default:
      memory: 512Mi
    defaultRequest:
      memory: 256Mi
    type: Container


apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-limit-range
spec:
  limits:
  - default:
      cpu: 1
    defaultRequest:
      cpu: 0.5
    type: Container

