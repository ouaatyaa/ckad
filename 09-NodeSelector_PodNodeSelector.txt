
-----------------------------------------------------------------------------------
-----------------------------------------NodeSelector------------------------------------------
// nodeSelector a une limitation on ne paus pas  placers les pods  :
   - tous nodes qui n'as pa le label=LARGE ( not in )
   - dans any nodes that have label of (LARGE,SMALL,BIG..)  (in) 
 cette limitation se resoue par NodeAffinity:

1- prparer les nodes:   labelisé les nodes :
kubectl label node knode1  env=prod
kubectl get nodes --show-labels

To remove label :
kubectl label pods foo bar-

2- editer le fichier deployement pour Ajouter NodeSelector

...
spec:
  replicas: 2
  selector:
    matchLabels:
      app: Mynginx
  template:
    metadata:
      labels:
        app: Mynginx
    spec:
      containers:
      - image: nginx
        name: nginx
      nodeSelector:            <<<ADD this POD spec NOT the container spec
         env: prod
--------------------------------------------PodNodeSelector---------------------------------------        
--------------------------------------------------------------------------------------------------
0-  changé la capabilité (disabled par defaut) :
vim /etc/kubernetes/manifests/kube-apiserver.yaml
add this PodNodSelector to file :
- --enable-admission-plugins=NodeRestriction,PodNodSelector
les pods kube-system  vont redemaré
1- prpare the node:  labilisé li node :
kubectl label node knod2  env=prod
kubectl label node knod1  env=dev
kubectl get nodes --show-labels

2- Add Annotations to namespaces under metadata:   ****!!!!!
kubectl edit ns prod
...
  annotations:
    scheduler.alpha.kubernetes.io/node-selector: "env=prod"

3- daba ila deployina chi deployement dans le ns prod ghadi itla7o dans knod2
     ET ila deployina chi deployement dans le ns dev  ghadi itla7o dans knod1

Modifier ns dans le yaml du deployement ET lancih ou bien lancih manuelement:

1---------------- ns prod
kubectl -n prod run deploy  nginx --image nginx

Every 2.0s: kubectl get all -o wide -n prod                    Sat Aug 27 14:12:41 2022

NAME         READY   STATUS      RESTARTS   AGE   IP              NODE    NOMINATED NOD
pod/deploy   0/1     Completed   2          32s   10.244.94.132   knod2   <none>

2------------      dev
root@kmaster:~# kubectl -n dev run   nginx --image nginx 
pod/nginx created

Every 2.0s: kubectl get all -o wide -n dev                     Sat Aug 27 14:15:01 2022

NAME        READY   STATUS    RESTARTS   AGE   IP               NODE    NOMINATED NODE
pod/nginx   1/1     Running   0          12s   10.244.128.160   knod1   <none>

root@kmaster:~# kubectl get nodes -l env=dev
NAME    STATUS   ROLES    AGE    VERSION
knod1   Ready    <none>   2d4h   v1.18.5
root@kmaster:~# kubectl get nodes -l env=prod
NAME    STATUS   ROLES    AGE   VERSION
knod2   Ready    <none>   16h   v1.18.5
root@kmaster:~# 